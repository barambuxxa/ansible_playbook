# Вот пример delegate_to. В этом плейбуке мы создаём файлы, пишем в созданный файл логи, перезагружаем машины. Отрываемся по полной.
---

- name: My Super Playbook
  hosts: all
  become: yes

  vars:
   mytext: "Privet ot Andrey Gurenich"                    # Объявляем переменную mytext и присваиваем ей значение

  tasks:

  - name: Unregister Server from Load Balancer            # Пишем текст "This server {{ inventory_hostname }} was deregistered from our Load Balancer, node name is {{ ansible_nodename }}" в файл /home/log.txt
    shell: echo This server {{ inventory_hostname }} was deregistered from our Load Balancer, node name is {{ ansible_nodename }} >> /home/log.txt
    delegate_to: 127.0.0.1                                #НО ЗАПУСКАЕМ ТОЛЬКО НА ЛОКАЛЬНОЙ МАШИНЕ (127.0.0.1)

  - name: Create file1                                    # создаём файл через модуль copy
    copy:
      dest: /home/file1.txt                               # Где будет создан этот файл
      content: |
        This is FileN1
        On ENGLISH Hello World
        On RUSSIAN {{ mytext }}                           # Вот что будет записано в файл + используем переменную mytext.
    delegate_to: ansibleclient3                           # Но запускаем только на ansibleclient3

  - name: Create file2                                    # Аналогично верхнему пункту, но на всех хостах
    copy:
      dest: /home/file2.txt
      content: |
         This is FileN2
         On ENGLISH Hello World
         ON RUSSIAN {{ mytext }}

  - name: restart the machine                             # Перезагружаем все хосты. 5 секунд ждём и рестарт!
    shell: "sleep 5 && reboot"

    async: 1
    poll: 0

  - name: wait for the machine to come back online        # Ждём когда машина снова будет онлайн
    wait_for_connection:
      connect_timeout: 60
      sleep: 5
      delay: 5
      timeout: 300
    delegate_to: 127.0.0.1                                # Запускаем только на локальной машине
