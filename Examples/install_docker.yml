---

- name: Install docker on hosts
  hosts: Cluster_k8s_new
  become: yes

  tasks:
    - name: Update apt packages                                                              #Обновляю
      ansible.builtin.apt:
        update_cache: yes

    - name: Install packages                                                                 #Качаю
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common

    - name: Add Docker GPG key                                                               #Добавляю GPG key:
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg

    - name: Add Docker repository                                                            #Добавляю репозиторий Докера
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes

    - name: Install Docker CE                                                                    #Устанавливаю Докер
      ansible.builtin.apt:
        name: docker-ce
        state: present
        update_cache: yes

    - name: Ensure Docker is running and enabled                                                 #Стартую сервис Докера
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add current user to docker group                                                    #Добавляю текущего пользователя в группу
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: yes

    - name: Verify Docker installation                                                           #Смотрю версию докера
      ansible.builtin.command: docker --version
      register: docker_version
      changed_when: false

    - name: Show Docker version
      ansible.builtin.debug:
        var: docker_version.stdout

    - name: Create /etc/containerd directory if it doesn't exist                                 #Создаю директорию /etc/containerd
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        mode: '0755'

    - name: Generate default containerd config                                                   #Беру конфиг докера и записываю его в файл /etc/containerd/config.toml, что бы он занимался развёрткой для класетар
      ansible.builtin.command: containerd config default
      register: containerd_config
      changed_when: false

    - name: Save default config to /etc/containerd/config.toml
      ansible.builtin.copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_config.stdout }}"
        mode: '0644'
      notify:
        - Enable systemd cgroup
        - Restart containerd

    - name: Ensure SystemdCgroup is enabled (idempotent check)                                    #Включаем SystemdCgroup и перезапускаем k8s
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^\s*SystemdCgroup\s*=\s*false'
        line: '            SystemdCgroup = true'
        backrefs: yes
      notify: Restart containerd

  handlers:
    - name: Enable systemd cgroup
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'
      listen: "Enable systemd cgroup"

    - name: Restart containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted
        enabled: yes
      listen: "Restart containerd"
